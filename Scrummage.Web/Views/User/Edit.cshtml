@using System.Web.Optimization
@using Scrummage.Web.ViewModels
@model Scrummage.Web.ViewModels.UserViewModel

@section AdditionalStyles {
    @Styles.Render("~/Content/select")
}

@section AdditionalScripts {
    @Scripts.Render("~/bundles/select")

    <script type="text/javascript">
        $(document).ready(function() {
            //Initialise select picker
            $('.selectpicker').selectpicker();

            //Auto select Roles
            AutoSelectRoles(@Html.Raw(Json.Encode(Model.RoleViewModels.Select(roleViewModels => roleViewModels.Title).ToArray())));
        });

        //Auto selects the Roles in the Roles Drop Down
        function AutoSelectRoles(selectedRoles) {
            $('.selectpicker').selectpicker('val', selectedRoles);
            $('.selectpicker').selectpicker('render');
        }
    </script>
}

@{
    ViewBag.Title = "Edit";
}

<h2>Edit</h2>

@using (Html.BeginForm("Edit", "User", FormMethod.Post, new {enctype = "multipart/form-data"}))
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal">
        <h4>User</h4>
        <hr />
        @Html.ValidationSummary(true)
        @Html.HiddenFor(model => model.Id)

        <div class="form-group">
            @Html.LabelFor(model => model.Name, new {@class = "control-label col-md-2"})
            <div class="col-md-10">
                @Html.EditorFor(model => model.Name)
                @Html.ValidationMessageFor(model => model.Name)
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.ShortName, new {@class = "control-label col-md-2"})
            <div class="col-md-10">
                @Html.EditorFor(model => model.ShortName)
                @Html.ValidationMessageFor(model => model.ShortName)
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Username, new {@class = "control-label col-md-2"})
            <div class="col-md-10">
                @Html.EditorFor(model => model.Username)
                @Html.ValidationMessageFor(model => model.Username)
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Password, new {@class = "control-label col-md-2"})
            <div class="col-md-10">
                @Html.EditorFor(model => model.Password)
                @Html.ValidationMessageFor(model => model.Password)
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.ConfirmPassword, new {@class = "control-label col-md-2"})
            <div class="col-md-10">
                @Html.EditorFor(model => model.ConfirmPassword)
                @Html.ValidationMessageFor(model => model.ConfirmPassword)
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Email, new {@class = "control-label col-md-2"})
            <div class="col-md-10">
                @Html.EditorFor(model => model.Email)
                @Html.ValidationMessageFor(model => model.Email)
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.RoleViewModels, new {@class = "control-label col-md-2"})
            <div class="col-md-10">
                <select id="roleSelect" name="roleSelect" class="selectpicker" multiple>
                    @if (ViewBag.RoleViewModels != null)
                    {
                        foreach (var roleViewModel in ViewBag.RoleViewModels as List<RoleViewModel>)
                        {
                            <option>@roleViewModel.Title</option>
                        }
                    }
                </select>
                @Html.ValidationMessageFor(model => model.RoleViewModels)
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.AvatarViewModel, new {@class = "control-label col-md-2"})
            <div class="col-md-10">
                <img src="@String.Format("data:image/gif;base64,{0}", Convert.ToBase64String(Model.AvatarViewModel.Image))" />
                <br />
                <br />
                <input type="file" name="file" id="file" style="width: 100%;" />
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Save" class="btn btn-default" />
            </div>
        </div>
    </div>
}

<div>
    @Html.ActionLink("Back to List", "Index")
</div>